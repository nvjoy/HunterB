---
    - name: Running - iUpdate
      shell: |
              . /tmp/include_db2
              SCRIPTNAME="iUpdate_{{ item }}"
              LOGFILE=${LOGDIR}/${SCRIPTNAME}.log
              log_roll ${LOGFILE} 
              if [[ ! -f "{{ db2vpath }}/instance/db2iupdt" ]]; then
                log "{{ db2vpath }}/instance/db2iupdt File not exist please check install"
                exit 23
              else
                DB2INST="{{ item }}"
                get_inst_home
                DB2FENCID=$(cat ${INSTHOME}/sqllib/ctrl/.fencedID)
                export LD_LIBRARY_PATH=
                touch {{ logsdir }}/{{ item }}_db2iupdate.log; chmod -f 777 {{ logsdir }}/{{ item }}_db2iupdate.log
                #log "Running - {{ db2vpath }}/instance/db2iupdt -u db2udf {{ item }} > {{ logsdir }}/{{ item }}_db2iupdate.log 2>&1"
                #{{ db2vpath }}/instance/db2iupdt -u db2udf {{ item }} > {{ logsdir }}/{{ item }}_db2iupdate.log 2>&1
                log "Running - {{ db2vpath }}/instance/db2iupdt -u ${DB2FENCID} ${DB2INST} > {{ logsdir }}/{{ item }}_db2iupdate.log 2>&1"
                {{ db2vpath }}/instance/db2iupdt -u ${DB2FENCID} ${DB2INST} > {{ logsdir }}/{{ item }}_db2iupdate.log 2>&1
                RCD=$?
                if [[ ${RCD} -eq 0 ]]; then
                  log "Instance - {{ item }} - Updated Successfully"
                else
                  log "Instance - {{ item }} - Updated Failed with ${RCD}, Please check log"
                  exit 23
                fi
                chmod -f 777 {{ logsdir }}/{{ item }}_db2iupdate.log
              fi
      args:
        executable: /bin/bash
      register: updatecmd
      loop: "{{ db2ilist.stdout_lines }}"
      failed_when: updatecmd.rc > 0
      tags: update